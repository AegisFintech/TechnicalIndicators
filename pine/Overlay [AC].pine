//@version=6
indicator(title="Overlay", shorttitle="2", format=format.price, timeframe="", timeframe_gaps=true)

// Stochastic
i1 = input(title='Stochastic',defval=true)

k = ta.sma(ta.stoch(close, high, low, 14), 1)
plot(i1 ? k : na, color=#2962FF)
plot(i1 ? ta.sma(k, 3) : na, color=#FF6D00)
hline(i1 ? 80 : na)
hline(i1 ? 50 : na)
hline(i1 ? 20 : na)

// Divergence
osc = ta.rsi(close, 14)
plot(osc, color=#2962FF), hline(50, color=#787B86, linestyle=hline.style_dotted)
fill(
	 hline(70, color=#787B86, linestyle=hline.style_dotted), hline(30, color=#787B86, linestyle=hline.style_dotted), 
	 color=color.rgb(33, 150, 243, 90))

plFound = na(ta.pivotlow(osc, 5, 5)) ? false : true, phFound = na(ta.pivothigh(osc, 5, 5)) ? false : true
_inRange(cond) =>
	bars = ta.barssince(cond == true), 5 <= bars and bars <= 60

inRangePl = _inRange(plFound[1])
oscHL = osc[5] > ta.valuewhen(plFound, osc[5], 1) and inRangePl

da = low[5] < ta.valuewhen(plFound, low[5], 1) and oscHL and plFound
plot(plFound?osc[5]:na, offset=-5, color=(da?#00ff00:na))
plotshape(da?osc[5]:na, offset=-5, text="Bull", location=location.absolute, textcolor=#00ff00)

oscLL = osc[5] < ta.valuewhen(plFound, osc[5], 1) and inRangePl
db = low[5] > ta.valuewhen(plFound, low[5], 1) and oscLL and plFound
plot(plFound?osc[5]:na, offset=-5, color=(db?#00ff00:na))
plotshape(db ? osc[5] : na, offset=-5, text="H Bull", location=location.absolute, textcolor=#00ff00)

inRangePh = _inRange(phFound[1])
oscLH = osc[5] < ta.valuewhen(phFound, osc[5], 1) and inRangePh
dc = high[5] > ta.valuewhen(phFound, high[5], 1) and oscLH and phFound
plot(phFound?osc[5]:na, offset=-5, color=(dc?#ff0000:na))
plotshape(dc?osc[5]:na, offset=-5, text="Bear", location=location.absolute, textcolor=#ff0000)

oscHH = osc[5] > ta.valuewhen(phFound, osc[5], 1) and inRangePh
dd = high[5] < ta.valuewhen(phFound, high[5], 1) and oscHH and phFound
plot(phFound?osc[5]:na, offset=-5, color=(dd?#ff0000:na))
plotshape(dd?osc[5]:na, offset=-5, text="H Bear", location=location.absolute, textcolor=#ff0000) 

// Directional Movement Index
i4 = input(title='Directional Movement Index',defval=false)
up = ta.change(high)
down = -ta.change(low)
trur = ta.rma(ta.tr, 14)
plus = fixnan(100 * ta.rma(na(up) ? na : (up > down and up > 0 ? up : 0), 14) / trur)
minus = fixnan(100 * ta.rma(na(down) ? na : (down > up and down > 0 ? down : 0), 14) / trur)
sum = plus + minus
plot(100 * ta.rma(math.abs(plus - minus) / (sum == 0 ? 1 : sum), 14), color=#F50057, title="ADX")
plot(plus, color=#2962FF, title="+DI")
plot(minus, color=#FF6D00, title="-DI")
