//@version=6
indicator(title="Main Chart [AC]", shorttitle = 'MC', overlay = true, max_bars_back = 5000, max_lines_count = 500, max_labels_count = 500, max_boxes_count = 500)

// a - EMA
a = input.bool(true, title='EMA')
plot(a ? ta.ema(close, 21) : na, color=#ff0000), plot(a ? ta.ema(close, 50) : na, color=#ffff00)
plot(a ? ta.ema(close, 200) : na, color=#ffffff)

// b - EMA Extra
b = input.bool(false, title='EMA Extra')
plot(b ? ta.ema(close, 7) : na, color=#00ff40), plot(b ? ta.ema(close, 100) : na, color=#ffff88)

// c - Bollinger Band (BB)
c = input.bool(false, title='Bollinger Band (BB)'), c0 = 0.0, c1 = 0.0
if c
    c0 := ta.sma(close, 7), c1 := 2.0*ta.stdev(close, 7)
plot(c ? c0 + c1 : na, color=#cccccc), plot(c ? c0 - c1 : na, color=#cccccc)

// d - Parabolic SAR
plot(input.bool(false, title='Parabolic SAR') ? ta.sar(0.01, 0.01, 0.3) : na, style=plot.style_cross, color=#cccccc)

// e - Pivot Points
e = input.bool(false, title='Pivot'), e0 = ta.pivothigh(10, 10), e1 = ta.pivotlow(10, 10)
if not na(e0) and e
    label.new(bar_index[10], e0, str.tostring(e0), style=label.style_label_down)
if not na(e1) and e
    label.new(bar_index[10], e1, str.tostring(e1), style=label.style_label_up)

// f - DeMark Sequential
f = input.bool(false, title='DeMark'), crossover = false, crossunder = false
if f
    int uc = 0, dc = 0
    for i = 0 to 8
        uc += (nz(close[i]) > nz(close[i + 4]) ? 1 : 0), dc += (nz(close[i]) < nz(close[i + 4]) ? 1 : 0)
    drp = dc == 9 ? 1 : uc == 9 ? -1 : 0, crossover := ta.crossover(drp, 0), crossunder := ta.crossunder(drp, 0)
plotshape(f and crossover, '', shape.labelup, location.belowbar, #00ff00), plotshape(f and crossunder, '', shape.labeldown, location.abovebar, #ff0000)

// g - Ichimoku Cloud
g = input.bool(false, title='Ichimoku Cloud'), g0 = 0.0, g1 = 0.0, g2 = 0.0, g3 = 0.0
if g
    g0 := (ta.highest(9) + ta.lowest(9)) / 2, g1 := (ta.highest(26) + ta.lowest(26)) / 2, g2 := (g0 + g1) / 2, g3 := (ta.highest(52) + ta.lowest(52)) / 2
plot(g ? g0 : na, color=#2962FF), plot(g ? g1 : na, color=#b71c1c), plot(g ? close : na, offset=-25, color=#43a047)
fill(plot(g ? g2 : na, offset=25, color=#a5d6a7), plot(g ? g3 : na, offset=25, color=#ef9a9a), color=g2 > g3 ? color.new(#43a047, 90) : color.new(#f44336, 90))

// h - Volume Profile 
H0(_a, _b) => math.round(_a / float(_b / 200 * 5))
if input.bool(true, title="Volume Profile")
    var line h0 = na, var line h1 = na, var line h2 = na, var array<line> h3 = array.new_line(),
     var array<float> h4 = array.new_float(200, 0), float h5 = ta.lowest(low, 200), h6 = (ta.highest(high, 200) - h5) / 199
    if barstate.isfirst
        for _i = 0 to 199
            array.push(h3, line.new(x1=bar_index, y1=close, x2=bar_index, y2=close))
        h0 := line.new(x1=bar_index, y1=close, x2=bar_index, y2=close, color=#ff0000)
        h1 := line.new(x1=bar_index, y1=close, x2=bar_index, y2=close, color=#2962FF)
        h2 := line.new(x1=bar_index, y1=close, x2=bar_index, y2=close, color=#2962FF)
    if barstate.islast
        array.fill(h4, 0)
        for _i = 0 to 199
            for _j = 0 to 199
                float _a = h5 + h6 * _j
                if (_a >= low[_i] and _a < high[_i])
                    array.set(h4, _j, h4.get(_j) + volume[_i])
        float h7 = h4.max(), int h8 = h4.indexof(h7), h9 = bar_index + 70
        for _i = 0 to 199
            _a = h3.get(_i), float _b = h5 + h6 * _i
            line.set_xy1(_a, h9 - H0(h4.get(_i), h7), _b), line.set_xy2(_a, h9, _b), line.set_color(_a, h8 == _i ? #ff0000 : #cccccc)
        float ha = h5 + h6 * h8, hb = h7, int hc = h8, hd = h8, line.set_xy1(h0, bar_index - 200, ha), line.set_xy2(h0, h9 - H0(h7, h7) - 10, ha)
        while hb < h4.sum() * 0.68
            float _a = (hc < 199) ? h4.get(hc + 1) : 0.0, _b = (hd > 0) ? h4.get(hd - 1) : 0.0
            if _a == 0 and _b == 0
                break
            if _a >= _b
                hb += _a, hc += 1
            else
                hb += _b, hd -= 1
        for _i = hd to hc
            if _i != h8
                line.set_color(h3.get(_i), #2962FF)
        int he = bar_index - 200, float hf = h5 + h6 * hc, hg = h5 + h6 * hd, hh = h9 - H0(h4.get(hc), h7) - 10
        line.set_xy1(h1, he, hf), line.set_xy1(h2, he, hg), line.set_xy2(h1, hh, hf), line.set_xy2(h2, hh, hg)

// l - Supertrend
l = input.bool(false, title="Supertrend"), [l0, l1] = ta.supertrend(3.0, 10)
l2 = barstate.isfirst ? na : l0, l3 = plot(l ? barstate.isfirst ? na : (open + close) / 2 : na)
fill(l3, plot(l1 < 0 and l ? l2 : na, color=#00ff00, style=plot.style_linebr), color=color.new(#00ff00, 90))
fill(l3, plot(l1 >= 0 and l ? l2 : na, color=#ff0000, style=plot.style_linebr), color=color.new(#ff0000, 90))

// m - VWAP Period
plot(input.bool(false, title="VWAP Period") ? math.sum((high+low+close)/3*volume, 14) / math.sum(volume, 14) : na)

// n = Volume
plot(input.bool(false, title='Volume') ? volume : na, style=plot.style_columns, color=open > close ? #b03838 : #008060)
